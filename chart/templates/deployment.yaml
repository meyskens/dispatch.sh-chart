{{- $root := . }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dispatch.fullname" . }}
  labels:
{{ include "dispatch.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
{{ include "dispatch.labels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "dispatch.labels" . | indent 8 }}
        updated: "{{ .Values.time }}"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: release
                      operator: In
                      values:
                        - {{ .Release.Name | quote }}
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: registry
       {{- if .Values.secrets }}
      volumes:
       {{- range $secret :=  .Values.secrets }}
        - name: {{ $secret.name }}
          secret:
            secretName: {{ template "dispatch.fullname" $root }}-{{ $secret.name }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image }}"
          imagePullPolicy: Always
          {{- if .Values.envvars }}
          env:
            {{- range $envvar := .Values.envvars }}
            - name: {{ $envvar.key | quote }}
              value: {{ $envvar.value | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.secrets }}
          volumeMounts:
          {{- range $secret := .Values.secrets }}
            - name: {{ $secret.name }}
              mountPath: {{ $secret.path }}
              readOnly: true
              subPath: file
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
